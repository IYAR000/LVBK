version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./configs:/app/configs
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - DATABASE_URL=postgresql://lvbk_user:lvbk_password@db:5432/lvbk_db
      - IBM_WATSON_API_KEY=${IBM_WATSON_API_KEY}
      - IBM_WATSON_PROJECT_ID=${IBM_WATSON_PROJECT_ID}
      - IBM_WATSON_URL=${IBM_WATSON_URL}
      - ALIBABA_ACCESS_KEY_ID=${ALIBABA_ACCESS_KEY_ID}
      - ALIBABA_ACCESS_KEY_SECRET=${ALIBABA_ACCESS_KEY_SECRET}
      - TENCENT_SECRET_ID=${TENCENT_SECRET_ID}
      - TENCENT_SECRET_KEY=${TENCENT_SECRET_KEY}
      - LOG_LEVEL=INFO
    depends_on:
      - db
      - redis
    networks:
      - lvbk-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=lvbk_user
      - POSTGRES_PASSWORD=lvbk_password
      - POSTGRES_DB=lvbk_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - lvbk-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lvbk-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  worker:
    build: .
    command: ["python", "-m", "src.lvbk.workers.training_worker"]
    volumes:
      - ./src:/app/src
      - ./configs:/app/configs
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - DATABASE_URL=postgresql://lvbk_user:lvbk_password@db:5432/lvbk_db
      - REDIS_URL=redis://redis:6379/0
      - IBM_WATSON_API_KEY=${IBM_WATSON_API_KEY}
      - IBM_WATSON_PROJECT_ID=${IBM_WATSON_PROJECT_ID}
      - IBM_WATSON_URL=${IBM_WATSON_URL}
      - LOG_LEVEL=INFO
    depends_on:
      - db
      - redis
    networks:
      - lvbk-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - lvbk-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  lvbk-network:
    driver: bridge
